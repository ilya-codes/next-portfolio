@mixin delay($rule, $number, $value) {
  @for $i from 1 to ($number + 1) {
    &:nth-child(#{$i}) {
      -webkit-#{$rule}-delay: (#{$i * $value});
      #{$rule}-delay: (#{$i * $value});
    }
  }
}

.tech {
  width: 100vw;
  max-width: 100rem;
  min-height: calc(100vh - 3rem);
  overflow: hidden;
  margin: 5rem auto 0;
  padding: 0 5rem;
  background: #fff;
  background: #333;
  display: flex;
  flex-direction: column;

  .header {
    opacity: 0;
    margin-top: 3rem;
    font-size: 1.8rem;
    text-align: center;
    color: lightgreen;
    transition: 1s ease-in-out;

    &.visible {
      opacity: 1;
    }
  }

  .wrapper {
    margin: 4rem 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    .techBox {
      width: 30rem;
      height: 4rem;
      margin: 0.5rem 1rem;
      background: linear-gradient(
        to bottom,
        transparentize(#fff, 0.8),
        transparentize(#fff, 0.95)
      );
      opacity: 0;
      transition: 0.3s ease-in-out;
      box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
      @include delay(transition, 8, 0.1s);
      display: flex;
      justify-content: center;

      .contentBox {
        margin: 1rem;
        display: flex;
        max-width: 10rem;
        font-size: 1.7rem;
        color: lightgreen;

        h2 {
          font-size: 1.2rem;
          margin-left: 0.5rem;
          pointer-events: none;
          color: gray;
        }
      }
    }
    .transition {
      opacity: 1;
    }

    @media screen and (max-width: 768px) {
      margin-top: 3rem;

      &.wrapper {
        justify-content: flex-start;
      }

      .techBox {
        width: 70vw;
        height: 3.5rem;

        .contentBox {
          font-size: 1.5rem;
          h2 {
            font-size: 1rem;
          }
        }
      }
    }
  }
  @media screen and (max-width: 768px) {
    min-height: unset;
    margin: 0 auto;

    .header {
      margin-top: 2rem;
      font-size: 1.5rem;
    }
  }
}
